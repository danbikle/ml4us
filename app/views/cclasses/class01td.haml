%h2 Class01 Answer:
%h2 What is Test Driven Development?

%p It is easy to find a definition of Test Driven Development (TDD):

%p
  %a(href='http://www.google.com/search?q=Test+Driven+Development' target='x')
    http://www.google.com/search?q=Test+Driven+Development

%p I see TDD as starting with an English statement, or test, which is False but should be True.

%p I make the test True with a small piece of software.

%p The test 'drives' development of a small piece of software.

%p
  I build a modular application from hundreds or thousands of small pieces of software,
  and each of them is birthed by a corresponding test.
  
%p For example, before I wrote the page which you are reading, I wrote this statement:

%p
  This page:
  %a(href='http://ml4.herokuapp.com/cclasses/class01td' target='x')
    http://ml4.herokuapp.com/cclasses/class01td
  should describe TDD.

%p After I wrote the page, the above test switched from False to True.

%p
  It is obvious, to me, that every test which drives development should start life as
  an English statement.
%p For many applications, I stop there; I do not transform the English tests into Software tests.

%p
  For some applications, I will transform the English statement into syntax which
  alerts me if a piece of software starts failing.
%p For example I could start with this English statement:
%p Everyday at 2pm the page http://ml4.herokuapp.com/cclasses/class01td should return a status of 200.

%p I might then transform that English into software which uses syntax like this:

.syntax
  %pre
    %code.bash /usr/bin/curl --head http://ml4.herokuapp.com/cclasses/class01td|head -1

%p I see those as the big ideas behind TDD.

%p
  When I develop the software tests which drive the development of an app,
  I often bump into many devilish details.

%p Implementing TDD is not easy but the main ideas behind it are comprehensive:

%ul
  %li An app should be modular.
  %li I write an English test before I start coding a software-piece.
  %li When the test becomes True, the piece is done.
  %li If I want to enhance a piece, I should first write a test.
  %li After I have written hundreds/thousands of tests, and they have become True, then I have an app.
  %li I should run my tests frequently to see if I have introduced any bugs during development.
  %li Fixing bugs is more important than adding enhancements.
  %li For simple apps, English-only tests might be good enough.

%p
  %a(href='class01')
    Class01
